@using Microsoft.Extensions.Configuration
@inject IConfiguration config

@model UsersManagementViewModel
@{
    ViewData["Title"] = "Administración";
}

<main role="main">
    <div class="container">
        <h1>Administración</h1>
        <hr />
        <h5>Control de los usuarios del dominio</h5>
        <div class="mt-3 mb-4">
            <span>
                <i class="fas fa-users"></i> Total de usuarios: <b>@Model.TotalUsers</b>
            </span>
            @if (Model.GetCloseToExpirePasswordUserCount(config.GetValue<int>("passwordExpirationDays")) > 0)
            {
                <span class="text-warning ml-2">
                    <i class="fas fa-exclamation-triangle"></i> Próximos a expirar contraseña: <b>@Model.GetCloseToExpirePasswordUserCount(config.GetValue<int>("passwordExpirationDays"))</b>
                </span>
            }
            @if (Model.GetExpiredPasswordUserCount(config.GetValue<int>("passwordExpirationDays")) > 0)
            {
                <span class="text-danger ml-2">
                    <i class="fas fa-exclamation-circle"></i> Con contraseña expirada: <b>@Model.GetExpiredPasswordUserCount(config.GetValue<int>("passwordExpirationDays"))</b>
                </span>
            }
        </div>

        <table class="table" style="font-size: 12px;">
            <thead class="font-weight-bold">
                <tr>
                    <td>
                        Nombre completo
                    </td>
                    <td>
                        Nombre de usuario
                    </td>
                    <td>
                        Descripción
                    </td>
                    <td colspan="2">
                        Contraseña expira
                    </td>
                </tr>
            </thead>
            <tbody>
                @foreach (var dependency in Model.Groups)
                {
                    <tr>
                        <td colspan="4" class="justify-content-center">
                            <h5>@dependency.Description</h5>
                            <span>
                                <i class="fas fa-users"></i> @dependency.Users.Count
                            </span>
                            @if (dependency.GetCloseToExpirePasswordUserCount(config.GetValue<int>("passwordExpirationDays")) > 0)
                            {
                                <span class="text-warning ml-2">
                                    <i class="fas fa-exclamation-triangle"></i> @dependency.GetCloseToExpirePasswordUserCount(config.GetValue<int>("passwordExpirationDays"))
                                </span>
                            }
                            @if (dependency.GetExpiredPasswordUserCount(config.GetValue<int>("passwordExpirationDays")) > 0)
                            {
                                <span class="text-danger ml-2">
                                    <i class="fas fa-exclamation-circle"></i> @dependency.GetExpiredPasswordUserCount(config.GetValue<int>("passwordExpirationDays"))
                                </span>
                            }
                        </td>
                    </tr>
                    @foreach (var user in dependency.Users.OrderBy(u => u.LastPasswordSet))
                    {
                        <tr>
                            <td>@user.DisplayName</td>
                            <td>@user.AccountName</td>
                            <td>@user.Description</td>
                            <td>
                                <partial name="_PasswordExpirationDateLabel" model="user.LastPasswordSet" />
                            </td>
                            <td>
                                <a asp-action="ResetUserPassword" asp-controller="Management" asp-route-accountName="@user.AccountName"><i class="btn btn-success fas fa-undo-alt"></i></a>
                                <a asp-action="SetUserPassword" asp-controller="Management" asp-route-accountName="@user.AccountName"><i class="btn btn-warning fas fa-asterisk"></i></a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</main>